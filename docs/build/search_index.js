var documenterSearchIndex = {"docs":
[{"location":"profit_and_loss/#Profit-and-loss-simulations-at-expiration","page":"Profit and loss simulations at expiration","title":"Profit and loss simulations at expiration","text":"","category":"section"},{"location":"profit_and_loss/#Background","page":"Profit and loss simulations at expiration","title":"Background","text":"","category":"section"},{"location":"profit_and_loss/","page":"Profit and loss simulations at expiration","title":"Profit and loss simulations at expiration","text":"Some background stuff goes here. ","category":"page"},{"location":"profit_and_loss/","page":"Profit and loss simulations at expiration","title":"Profit and loss simulations at expiration","text":"compute_option_profit_and_loss_at_expiration","category":"page"},{"location":"profit_and_loss/#PooksoftOptionsKit.compute_option_profit_and_loss_at_expiration","page":"Profit and loss simulations at expiration","title":"PooksoftOptionsKit.compute_option_profit_and_loss_at_expiration","text":"compute_option_profit_and_loss_at_expiration(assetSet::Set{PSAbstractAsset}, assetPriceArray::Array{Float64,1})::(Union{PooksoftBase.PSResult{T}, Nothing} where T<:Any)\n\nCompute the overall profit and loss (P/L) for a set option contracts with the same expiration date, and underlying asset.\n\nArguments\n\nassetSet::Set{PSAbstractAsset}: A set containing the put and call contract models in this trade. \nassetPriceArray::Array{Float64,1}: An 1d array containing underlying asset prices to be used in the P/L calculation for this trade \n\n\n\n\n\ncompute_option_profit_and_loss_at_expiration(assetSet::Set{PSAbstractAsset}, assetPriceStart::Float64, assetPriceStop::Float64; \n    number_of_price_steps::Int64=1000)::(Union{PooksoftBase.PSResult{T}, Nothing} where T<:Any)\n\nCompute the overall profit and loss (P/L) for a set option contracts with the same expiration date, and underlying asset.\n\nArguments\n\nassetSet::Set{PSAbstractAsset}: A set containing the put and call contract models in this trade. \nassetPriceStart::Float64: The start price for the underlying asset used to calculate the P/L values in this trade \nassetPriceStop::Float64: The start price for the underlying asset used to calculate the P/L values in this trade\nnumber_of_price_steps::Int64=1000: keyword arg describing the number of steps to take between the start and stop price. Default: 1000\n\n\n\n\n\ncompute_option_profit_and_loss_at_expiration(assetSet::Set{PSAbstractAsset}, underlyingPriceRange::Tuple{Float64,Float64,Int64})::(Union{PooksoftBase.PSResult{T}, Nothing} where T<:Any)\n\nCompute the overall profit and loss (P/L) for a set option contracts with the same expiration date, and underlying asset.\n\nArguments\n\nassetSet::Set{PSAbstractAsset}: A set containing the put and call contract models in this trade. \nunderlyingPriceRange::Tuple{Float64,Float64,Int64}: A tuple containing the price start, price stop and number of steps between the start and stop price to be used in the P/L calculation for this trade \n\n\n\n\n\n","category":"function"},{"location":"price/#Price-models","page":"Price models","title":"Price models","text":"","category":"section"},{"location":"greeks/#Computing-The-Greeks","page":"Computing The Greeks","title":"Computing The Greeks","text":"","category":"section"},{"location":"greeks/#Background","page":"Computing The Greeks","title":"Background","text":"","category":"section"},{"location":"greeks/","page":"Computing The Greeks","title":"Computing The Greeks","text":"The Greeks is a term used in the options market to describe the different dimensions of risk involved in taking an options position. These variables are called Greeks because they are typically associated with Greek symbols.  Each risk variable is a result of an imperfect assumption or relationship of the option with another underlying variable. Traders use different Greek values, such as delta, theta, and others, to assess options risk and manage option portfolios. ","category":"page"},{"location":"greeks/#Delta","page":"Computing The Greeks","title":"Delta","text":"","category":"section"},{"location":"greeks/","page":"Computing The Greeks","title":"Computing The Greeks","text":"Delta represents the rate of change between the option's price and a 1-dollar change in the underlying asset's price. In other words, the price sensitivity of the option relative to the underlying. Delta of a call option has a range between zero and one, while the delta of a put option has a range between zero and negative one. For example, assume an investor is long a call option with a delta of 0.50. Therefore, if the underlying stock increases by 1-dollar, the option's price would theoretically increase by 50 cents.","category":"page"},{"location":"greeks/","page":"Computing The Greeks","title":"Computing The Greeks","text":"For options traders, delta also represents the hedge ratio for creating a delta-neutral position. For example if you purchase a standard American call option with a 0.40 delta, you will need to sell 40 shares of stock to be fully hedged. Net delta for a portfolio of options can also be used to obtain the portfolio's hedge ration.","category":"page"},{"location":"greeks/","page":"Computing The Greeks","title":"Computing The Greeks","text":"A less common usage of an option's delta is it's current probability that it will expire in-the-money. For instance, a 0.40 delta call option today has an implied 40-percent probability of finishing in-the-money. ","category":"page"},{"location":"greeks/","page":"Computing The Greeks","title":"Computing The Greeks","text":"delta","category":"page"},{"location":"greeks/#PooksoftOptionsKit.delta","page":"Computing The Greeks","title":"PooksoftOptionsKit.delta","text":"delta(assetSet::Set{PSAbstractAsset}, parameters::PSBinaryLatticeModel, underlyingAssetPrice::Float64; \n    earlyExercise::Bool = false)::PSResult\n\nCompute the change in the option price for a 1-dollar increase in the underlying stock price\n\nArguments\n\nassetSet::Set{PSAbstractAsset}: A set containing the put and call models involved in this trade. \nparameters::PSBinaryLatticeModel: A PSBinaryLatticeModel object containing the parameters for the lattice\nunderlyingAssetPrice::Float64: Underlying stock price at the time of purchase of the contract\nearlyExercise::Bool = false: Can this option contract be excercised early (true for American options)\n\n\n\n\n\n","category":"function"},{"location":"greeks/#Theta","page":"Computing The Greeks","title":"Theta","text":"","category":"section"},{"location":"greeks/","page":"Computing The Greeks","title":"Computing The Greeks","text":"Theta represents the rate of change between the option price and time, or time sensitivity - sometimes known as an option's time decay. Theta indicates the amount an option's price would decrease as the time to expiration decreases, all else equal. For example, assume an investor is long an option with a theta of -0.50. The option's price would decrease by 50 cents every day that passes, all else being equal.","category":"page"},{"location":"greeks/","page":"Computing The Greeks","title":"Computing The Greeks","text":"Theta increases when options are at-the-money, and decreases when options are in- and out-of-the money. Options closer to expiration also have accelerating time decay. Long calls and long puts will usually have negative Theta; short calls and short puts will have positive Theta. By comparison, an instrument whose value is not eroded by time, such as a stock, would have zero Theta.","category":"page"},{"location":"greeks/","page":"Computing The Greeks","title":"Computing The Greeks","text":"theta","category":"page"},{"location":"greeks/#PooksoftOptionsKit.theta","page":"Computing The Greeks","title":"PooksoftOptionsKit.theta","text":"theta(assetSet::Set{PSAbstractAsset}, parameters::PSBinaryLatticeModel, underlyingAssetPrice::Float64; \n    earlyExercise::Bool = false)::PSResult\n\nCompute the change in the price of the option contract for a one day decrease in the number of days left until expiration\n\nArguments\n\nassetSet::Set{PSAbstractAsset}: A set containing the put and call models involved in this trade. \nparameters::PSBinaryLatticeModel: A PSBinaryLatticeModel object containing the parameters for the lattice\nunderlyingAssetPrice::Float64: Underlying stock price at the time of purchase of the contract\nearlyExercise::Bool = false: Can this option contract be excercised early (true for American options)\n\n\n\n\n\n","category":"function"},{"location":"greeks/#Gamma","page":"Computing The Greeks","title":"Gamma","text":"","category":"section"},{"location":"greeks/","page":"Computing The Greeks","title":"Computing The Greeks","text":"Gamma represents the rate of change between an option's delta and the underlying asset's price. This is called second-order (second-derivative) price sensitivity. Gamma indicates the amount the delta would change given a 1-dollar move in the underlying security. For example, assume an investor is long one call option on hypothetical stock XYZ. The call option has a delta of 0.50 and a gamma of 0.10. Therefore, if stock XYZ increases or decreases by 1-dollar, the call option's delta would increase or decrease by 0.10.","category":"page"},{"location":"greeks/","page":"Computing The Greeks","title":"Computing The Greeks","text":"Gamma is used to determine how stable an option's delta is: higher gamma values indicate that delta could change dramatically in response to even small movements in the underlying price. Gamma is higher for options that are at-the-money and lower for options that are in- and out-of-the-money, and accelerates in magnitude as expiration approaches. Gamma values are generally smaller the further away from the date of expiration; options with longer expirations are less sensitive to delta changes. As expiration approaches, gamma values are typically larger, as price changes have more impact on gamma.","category":"page"},{"location":"greeks/","page":"Computing The Greeks","title":"Computing The Greeks","text":"Options traders may opt to not only hedge delta but also gamma in order to be delta-gamma neutral, meaning that as the underlying price moves, the delta will remain close to zero.","category":"page"},{"location":"greeks/","page":"Computing The Greeks","title":"Computing The Greeks","text":"gamma","category":"page"},{"location":"greeks/#PooksoftOptionsKit.gamma","page":"Computing The Greeks","title":"PooksoftOptionsKit.gamma","text":"gamma(assetSet::Set{PSAbstractAsset}, parameters::PSBinaryLatticeModel, underlyingAssetPrice::Float64; \n    earlyExercise::Bool = false)::PSResult\n\nCompute the rate of change of the delta parameter\n\nArguments\n\nassetSet::Set{PSAbstractAsset}: A set containing the put and call models involved in this trade. \nparameters::PSBinaryLatticeModel: A PSBinaryLatticeModel object containing the parameters for the lattice\nunderlyingAssetPrice::Float64: Underlying stock price at the time of purchase of the contract\nearlyExercise::Bool = false: Can this option contract be excercised early (true for American options)\n\n\n\n\n\n","category":"function"},{"location":"greeks/#Vega","page":"Computing The Greeks","title":"Vega","text":"","category":"section"},{"location":"greeks/","page":"Computing The Greeks","title":"Computing The Greeks","text":"Vega represents the rate of change between an option's value and the underlying asset's implied volatility. This is the option's sensitivity to volatility. Vega indicates the amount an option's price changes given a 1-percent change in implied volatility. For example, an option with a Vega of 0.10 indicates the option's value is expected to change by 10 cents if the implied volatility changes by 1-percent.","category":"page"},{"location":"greeks/","page":"Computing The Greeks","title":"Computing The Greeks","text":"Because increased volatility implies that the underlying instrument is more likely to experience extreme values, a rise in volatility will correspondingly increase the value of an option. Conversely, a decrease in volatility will negatively affect the value of the option. Vega is at its maximum for at-the-money options that have longer times until expiration.","category":"page"},{"location":"greeks/","page":"Computing The Greeks","title":"Computing The Greeks","text":"vega","category":"page"},{"location":"greeks/#PooksoftOptionsKit.vega","page":"Computing The Greeks","title":"PooksoftOptionsKit.vega","text":"vega(assetSet::Set{PSAbstractAsset}, parameters::PSBinaryLatticeModel, underlyingAssetPrice::Float64; \n    earlyExercise::Bool = false)::PSResult\n\nCompute the change in the price of an option contract for a 1-percent increase in the implied volatility\n\nArguments\n\nassetSet::Set{PSAbstractAsset}: A set containing the put and call models involved in this trade. \nparameters::PSBinaryLatticeModel: A PSBinaryLatticeModel object containing the parameters for the lattice\nunderlyingAssetPrice::Float64: Underlying stock price at the time of purchase of the contract\nearlyExercise::Bool = false: Can this option contract be excercised early (true for American options)\n\n\n\n\n\n","category":"function"},{"location":"greeks/#Rho","page":"Computing The Greeks","title":"Rho","text":"","category":"section"},{"location":"greeks/","page":"Computing The Greeks","title":"Computing The Greeks","text":"Rho represents the rate of change between an option's value and a 1% change in the interest rate. This measures sensitivity to the interest rate. For example, assume a call option has a rho of 0.05 and a price of 1.25 USD. If interest rates rise by 1-percent, the value of the call option would increase to 1.30 USD, all else being equal. The opposite is true for put options. Rho is greatest for at-the-money options with long times until expiration.","category":"page"},{"location":"greeks/","page":"Computing The Greeks","title":"Computing The Greeks","text":"rho","category":"page"},{"location":"greeks/#PooksoftOptionsKit.rho","page":"Computing The Greeks","title":"PooksoftOptionsKit.rho","text":"rho(assetSet::Set{PSAbstractAsset}, parameters::PSBinaryLatticeModel, underlyingAssetPrice::Float64; \n    earlyExercise::Bool = false)::PSResult\n\nCompute the change in the price of an option contract for a 1% increase in the risk free rate\n\nArguments\n\nassetSet::Set{PSAbstractAsset}: A set containing the put and call models involved in this trade. \nparameters::PSBinaryLatticeModel: A PSBinaryLatticeModel object containing the parameters for the lattice\nunderlyingAssetPrice::Float64: Underlying stock price at the time of purchase of the contract\nearlyExercise::Bool = false: Can this option contract be excercised early (true for American options)\n\n\n\n\n\n","category":"function"},{"location":"#PooksoftOptionsKit.jl","page":"PooksoftOptionsKit.jl","title":"PooksoftOptionsKit.jl","text":"","category":"section"},{"location":"binomial/#Lattice-pricing-models","page":"Lattice pricing models","title":"Lattice pricing models","text":"","category":"section"},{"location":"binomial/#Background","page":"Lattice pricing models","title":"Background","text":"","category":"section"},{"location":"binomial/","page":"Lattice pricing models","title":"Lattice pricing models","text":"The binomial option pricing model is an options valuation method developed by Cox et al in 1979. The binomial option pricing model uses an iterative procedure, allowing for the specification of nodes, or points in time, during the time span between the valuation date and the option's expiration date.","category":"page"},{"location":"binomial/","page":"Lattice pricing models","title":"Lattice pricing models","text":"The ternary (or trinomial) option pricing model is an option pricing model incorporating three possible values that an underlying asset can have in one time period. The three possible values the underlying asset can have in a time period may be greater than, the same as, or less than the current value.","category":"page"},{"location":"binomial/","page":"Lattice pricing models","title":"Lattice pricing models","text":"The trinomial option pricing model differs from the binomial option pricing model in one key aspect by incorporating another possible value in one time period. Under the binomial option pricing model, it is assumed that the value of the underlying asset will either be greater than or less than, its current value. The trinomial model, on the other hand, incorporates a third possible value, which incorporates a zero change in value over a time period. This assumption makes the trinomial model more relevant to real life situations, as it is possible that the value of an underlying asset may not change over a time period, such as a month or a year.","category":"page"},{"location":"binomial/","page":"Lattice pricing models","title":"Lattice pricing models","text":"option_contract_price","category":"page"},{"location":"binomial/#PooksoftOptionsKit.option_contract_price","page":"Lattice pricing models","title":"PooksoftOptionsKit.option_contract_price","text":"option_contract_price(contractSet::Set{PSAbstractAsset}, latticeModel::PSBinaryLatticeModel, baseUnderlyingPrice::Float64; \n    earlyExercise::Bool = false)::PooksoftBase.PSResult\n\nEstimate the price of a contract using a binary lattice pricing model.\n\n\n\n\n\noption_contract_price(contractSet::Set{PSAbstractAsset}, latticeModel::PSTernaryLatticeModel, baseUnderlyingPrice::Float64; \n    earlyExercise::Bool = false)::PooksoftBase.PSResult\n\nEstimate the price of a contract using a ternary lattice pricing model.\n\n\n\n\n\n","category":"function"}]
}
